import type { NextPage } from "next";
import Head from "next/head";
import { auth, db, functions } from "../libs/firebase";
import styles from "../styles/Home.module.css";
import { signInAnonymously, onAuthStateChanged } from "firebase/auth";
import { useEffect, useState } from "react";
import { videoIndex, videoIndexAsc } from "../libs/algolia";
import { Video } from "../types/Video";
import { User } from "../types/User";
import { debounce } from "debounce";
import { SearchIndex } from "algoliasearch/lite";
import { httpsCallable } from "firebase/functions";
import { getDoc, doc } from "firebase/firestore";
import { useAuth } from "../libs/userContext";

type SearchRespons = {
  nbHits: number;
  hits: Video[];
};

const Home: NextPage = () => {
  const [index, setIndex] = useState<SearchIndex>(videoIndex);
  const [searchResult, setSearchResult] = useState<SearchRespons>();

  // 箱の中身を取り出している
  const { user } = useAuth();

  const signIn = () => {
    signInAnonymously(auth).then(() => {
      alert("login成功");
    });
  };

  const signOut = () => {
    auth.signOut();
  };

  const changeIndex = (value: string) => {
    switch (value) {
      case "desc":
        setIndex(videoIndex);
        break;
      case "asc":
        setIndex(videoIndexAsc);
        break;
    }
  };

  const search = debounce((value: string) => {
    index.search<Video>(value).then(({ nbHits, hits }) => {
      setSearchResult({
        nbHits,
        hits,
      });
    });
  }, 500);

  useEffect(() => {
    search("");
  }, [index]);

  useEffect(() => {
    search("");
  }, []);

  useEffect(() => {
    console.log(user, "check");
  }, [user]);

  const getCheckoutURL = () => {
    const callable = httpsCallable(functions, "getCheckoutURL");
    callable({ cid: user?.customerId }).then(({ data: url }) => {
      window.open(url as string);
    });
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        {user && <p>顧客ID{user.customerId}さんこんにちは</p>}
        {user && user?.premium ? <p>有料プラン</p> : <p>無料プラン</p>}
        {user ? (
          <button onClick={signOut}>ログアウト</button>
        ) : (
          <button onClick={signIn}>ログイン</button>
        )}
        <h2>検索</h2>
        <select onChange={(e) => changeIndex(e.target.value)}>
          <option value="desc">再生時間長い順</option>
          <option value="asc">再生時間短い順</option>
        </select>

        <p>{searchResult?.nbHits}件ヒット</p>
        <ul>
          {searchResult?.hits.map((video) => {
            return (
              <li key={video.title}>
                {video.title} (再生時間{video.minutes}分)
              </li>
            );
          })}
        </ul>
        <input
          type="text"
          placeholder="作品タイトル"
          onChange={(e) => search(e.target.value)}
        />

        {user && (
          <div>
            <p>プレミアムプラン: 月額980円</p>
            <button onClick={getCheckoutURL}>課金スタート</button>
          </div>
        )}
      </main>
    </div>
  );
};

export default Home;
